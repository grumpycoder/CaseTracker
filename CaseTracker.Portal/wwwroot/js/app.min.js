(function () {
    'use strict';

    var module = angular.module('app', [
        //third party modules
        'ui.bootstrap'
    ]);

    module.run(function () {
        console.log('Application Started');
    })
})();
//case-detail.component.js
(function () {
    var module = angular.module('app');

    function controller($http) {
        var $ctrl = this;

        $ctrl.title = 'Case Manager';
        $ctrl.subTitle = 'Case';

        $ctrl.$onInit = function () {
            console.log('case detail init');
            var id = location.pathname.split('/')[location.pathname.split('/').length - 1];
            console.log('id', id);
            $http.get('/api/case/' + id).then(function (r) {
                $ctrl.case = r.data;
                console.log('case', $ctrl.case);
            });
        }

    }

    module.component('caseDetail', {
        templateUrl: '/app/cases/case-detail.component.html',
        controller: ['$http', controller]
    });
})();
//case-list.component.js
(function () {
    var module = angular.module('app');

    function controller($http) {
        var $ctrl = this;

        $ctrl.title = 'Case Manager';
        $ctrl.subTitle = 'Cases';

        $ctrl.$onInit = function () {
            console.log('case list init');
            $http.get('api/case/list').then(function (r) {
                console.log('r', r);
                $ctrl.cases = r.data;
            });
        }

    }

    module.component('caseList', {
        templateUrl: 'app/cases/case-list.component.html',
        controller: ['$http', controller]
    });
})();
//court-edit.component.js
(function () {
    var module = angular.module('app');

    function controller($http) {
        var $ctrl = this;

        $ctrl.title = 'Court Manager';
        $ctrl.subTitle = 'Court';

        $ctrl.$onInit = function () {
            console.log('court edit init', $ctrl);
            if ($ctrl.resolve) {
                $ctrl.court = angular.copy($ctrl.resolve.court);
            }
        }

        $ctrl.cancel = function () {
            $ctrl.dismiss();
        }

        $ctrl.save = function () {
            console.log('save', $ctrl.court);
            $http.put('api/court', $ctrl.court).then(function (r) {
                $ctrl.modalInstance.close($ctrl.court);
            });
        }


    }

    module.component('courtEdit', {
        templateUrl: 'app/courts/court-edit.component.html',
        controller: ['$http', controller],
        bindings: {
            court: '<',
            resolve: '<',
            close: '&',
            dismiss: '&',
            modalInstance: '<'
        }
    });
})();
//court-list.component.js
(function () {
    var module = angular.module('app');

    function controller($http, $modal) {
        var $ctrl = this;

        $ctrl.title = 'Court Manager';
        $ctrl.subTitle = 'Courts';

        $ctrl.$onInit = function () {
            console.log('court list init');
            $http.get('api/court/list').then(function (r) {
                console.log('r', r);
                $ctrl.courts = r.data;
            });
        }
        $ctrl.openModal = function (court) {
            console.log('selected', court);
            $modal.open({
                component: 'courtEdit',
                bindings: {
                    modalInstance: "<"
                },
                resolve: {
                    court: court
                },
                size: 'md'
            }).result.then(function (result) {
                console.log('updated', result);
                angular.extend(court, result);
            }, function (reason) {});
        }
    }

    module.component('courtList', {
        templateUrl: 'app/courts/court-list.component.html',
        controller: ['$http', '$uibModal', controller]
    });
})();
//jurisdiction-edit.component.js
(function () {
    var module = angular.module('app');

    function controller($http) {
        var $ctrl = this;

        $ctrl.title = 'Jurisdiction Manager';
        $ctrl.subTitle = 'Jurisdictions';

        $ctrl.$onInit = function () {
            console.log('jurisdiction edit init', $ctrl);
            if ($ctrl.resolve) {
                $ctrl.jurisdiction = angular.copy($ctrl.resolve.jurisdiction);
            }
        }

        $ctrl.cancel = function () {
            $ctrl.dismiss();
        }

        $ctrl.save = function () {
            console.log('save', $ctrl.jurisdiction);
            $http.put('api/jurisdiction', $ctrl.jurisdiction).then(function (r) {
                $ctrl.modalInstance.close($ctrl.jurisdiction);
            });
        }


    }

    module.component('jurisdictionEdit', {
        templateUrl: 'app/jurisdictions/jurisdiction-edit.component.html',
        controller: ['$http', controller],
        bindings: {
            jurisdiction: '<',
            resolve: '<',
            close: '&',
            dismiss: '&',
            modalInstance: '<'
        }
    });
})();
//jurisdiction-list.component.js
(function () {
    var module = angular.module('app');

    function controller($http, $modal) {
        var $ctrl = this;

        $ctrl.title = 'Jurisdiction Manager';
        $ctrl.subTitle = 'Jurisdictions';

        $ctrl.$onInit = function () {
            console.log('jurisdiction list init');
            $http.get('api/jurisdiction/list').then(function (r) {
                console.log('r', r);
                $ctrl.jurisdictions = r.data;
            });
        }

        $ctrl.selectJurisidiction = function (j) {
            console.log('select', j);
            $ctrl.selectedJurisidiction = j;
        }

        $ctrl.openModal = function (jurisdiction) {
            console.log('selected', jurisdiction);
            $modal.open({
                component: 'jurisdictionEdit',
                bindings: {
                    modalInstance: "<"
                },
                resolve: {
                    jurisdiction: jurisdiction
                },
                size: 'md'
            }).result.then(function (result) {
                console.log('updated', result);
                angular.extend(jurisdiction, result);
            }, function (reason) {});
        }
    }

    module.component('jurisdictionList', {
        templateUrl: 'app/jurisdictions/jurisdiction-list.component.html',
        controller: ['$http', '$uibModal', controller]
    });
})();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
